package br.com.ggc.questinario;

import java.util.ArrayList;

import android.annotation.SuppressLint;
import android.annotation.TargetApi;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Build;
import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.TabLayout;
import android.support.design.widget.TabLayout.Tab;
import android.support.v4.view.ViewPager;
import android.support.v4.view.ViewPager.OnPageChangeListener;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.View;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import br.com.ggc.questinario.Util.CircleProgressView;
import br.com.ggc.questinario.Util.Dados;
import br.com.ggc.questinario.adapters.PagerAdapter;
import br.com.ggc.questinario.objs.ItemTab;


@TargetApi(Build.VERSION_CODES.HONEYCOMB) 
public class ActivityPrincipal extends AppCompatActivity  {

	private TextView mTitulo;
	private Toolbar mToolbar;
	private LinearLayout mEnvio;
	private TabLayout mTabLayout;
	private CircleProgressView mCircleView;
	private FloatingActionButton mFabProximo;
	private FloatingActionButton mFabVoltar;
	private ArrayList<String> mItens;
	private SharedPreferences preferences;
	private int posicao;
	
	@SuppressLint("NewApi") @Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_principal);
		
		//Carrega as views
		carregarViews();
		
		setSupportActionBar(mToolbar);
		
		carregarTabs();
		

		mTabLayout.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
			
			@Override
			public void onTabUnselected(Tab arg0) {
				// TODO Auto-generated method stub
				//Toast.makeText(ActivityPrincipal.this, "onTabUnselected \nPosicão: " + arg0.getPosition(), Toast.LENGTH_SHORT).show();
				//posicao = arg0.getPosition();
				//mTitulo.setText(Dados.getShared(ActivityPrincipal.this, "Tab"+arg0, (int)0));
			}
			
			@Override
			public void onTabSelected(Tab arg0) {
				// TODO Auto-generated method stub
				posicao = arg0.getPosition();
				carregarTab(arg0.getPosition());
				//Toast.makeText(ActivityPrincipal.this, "onTabSelected \nPosicão: " + arg0.getPosition(), Toast.LENGTH_SHORT).show();
			}
			
			@Override
			public void onTabReselected(Tab arg0) {
				posicao = arg0.getPosition();
				carregarTab(arg0.getPosition());
				// TODO Auto-generated method stub
				//Toast.makeText(ActivityPrincipal.this, "onTabReselected \nPosicão: " + String.valueOf(arg0.getPosition()) + "\n valor Salvo: " + String.valueOf(mValorCorrent), Toast.LENGTH_SHORT).show();
			}
		});

		preferences = getSharedPreferences("questinario", Context.MODE_WORLD_WRITEABLE);	  
	
		if (!Dados.getShared(this, "brirBoasVinda", false)) {
			
			 SharedPreferences.Editor editor = preferences.edit();
			 editor.putBoolean("brirBoasVinda",true);
			 editor.apply();
			 editor = null;
			 
			 Intent it = new Intent(this,ActivityBemVindo.class);
	         startActivity(it);
		}
	}
	
	public void onClickFabProximo(View v){
		mTabLayout.getTabAt(posicao).setIcon(R.drawable.ic_done_white_18dp);
		salvarTab();
		mTabLayout.getTabAt(posicao + 1).select();
		carregarTab(posicao);

	}
	public void onClickFabVoltar(View v){
		 	 
		mTabLayout.getTabAt(posicao -1).select();
		carregarTab(posicao);
		 
	}

	private void carregarViews(){
		mFabVoltar = (FloatingActionButton) findViewById(R.id.fabVoltar);
		mFabProximo = (FloatingActionButton) findViewById(R.id.fabProximo);
		mToolbar = (Toolbar) findViewById(R.id.toolbar);
		mTabLayout = (TabLayout) findViewById(R.id.tab_layout);
		mCircleView = (CircleProgressView) findViewById(R.id.circleView);
	    mTitulo = (TextView) findViewById(R.id.textCategoria);
	    mEnvio = (LinearLayout) findViewById(R.id.llEnvio);
	}
	
	private void carregarTab(int index){
		if (index == 0) {
			mFabVoltar.setVisibility(View.GONE);
		}else {
			mFabVoltar.setVisibility(View.VISIBLE);
		}
		if (index == mItens.size() -1) {
			mEnvio.setVisibility(View.VISIBLE);
		}else {
			mEnvio.setVisibility(View.GONE);
		}
		mTitulo.setText(mItens.get(index).toString());
		mCircleView.setValue(Dados.getShared(ActivityPrincipal.this, "Tab"+index, (int)0));
		mCircleView.setValueAnimated(Dados.getShared(ActivityPrincipal.this, "Tab"+index, (int)0));
	}
	
	private void salvarTab(){
		 SharedPreferences.Editor editor = preferences.edit();
		 editor.putInt("Tab"+posicao,mCircleView.getValue()+1);
		 editor.apply();
		 editor = null;
	}
	
	private void carregarTabs(){
		mItens = new ArrayList<String>();
		mItens.add("HTML");
		mItens.add("CSS");
		mItens.add("Javascript");
		mItens.add("Python");
		mItens.add("Django");
		mItens.add("Desenvolvimento iOS");
		mItens.add("Desenvolvimento Android");
		mItens.add("Envio");
		for (int i = 0; i < mItens.size(); i++) {
			mTabLayout.addTab(mTabLayout.newTab().setText(String.valueOf(i+1)));
		}
		
        mCircleView.setMaxValue(11);
        mCircleView.setTextSize(20);
        mCircleView.setUnitSize(15);
        mCircleView.setAutoTextSize(true); 		
		mTabLayout.setTabGravity(TabLayout.GRAVITY_FILL);
		
		carregarTab(0);
		
	}
}
